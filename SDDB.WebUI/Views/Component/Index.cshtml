@model SDDB.Domain.Entities.Component
@{
    ViewBag.Title = "Components";
}

<!------- MainView ------->
<div class="container-fluid" id="MainView">

    <div class="row">
        <div class="col-xs-12">
            <div class="btn-group margin-bottom-2px">
                <button class="btn btn-default" id="BtnCreate">Create</button>
                <button class="btn btn-primary" id="BtnEdit">Edit</button>
                <button class="btn btn-danger" id="BtnDelete">Delete</button>
            </div>

            <div class="btn-group margin-bottom-2px">
                <div id="MsFilterByType" placeholder="Select Type"></div>
            </div>
            <div class="btn-group margin-bottom-2px">
                <div id="MsFilterByProject" placeholder="Select Project"></div>
            </div>
            <div class="btn-group margin-bottom-2px">
                <div id="MsFilterByAssy" placeholder="Select Assembly"></div>
            </div>

            <div class="pull-right">
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">Options <span class="caret"></span></button>
                    <ul class="dropdown-menu dropdown-menu-right">
                        <li><a href=# id="dropdownId1">Show 1st Columns</a></li>
                        <li><a href=# id="dropdownId2">Show 2nd Columns</a></li>
                        <li><a href=# id="dropdownId3">Show 3rd Columns</a></li>
                        <li><a href=# id="dropdownId4">Show 4th Columns</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-primary" id="PanelTableMain">
        <div class="panel-heading text-center" style="font-size:130%">
            <strong>Components</strong>
            <div class="pull-right">
                <input id="ChBoxShowDeleted" type="checkbox" data-toggle="toggle" data-size="mini" data-width="100" data-onstyle="warning" data-on="Deleted Shown" data-off="Show Deleted" disabled>
            </div>
        </div>
        <table class="table table-striped" id="TableMain">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Alternate Name</th>
                    <th>2nd. Alt. Name</th>
                    <th>Type</th>
                    <th>Status</th>
                    <th>Model</th>
                    <th>Project</th>
                    <th>Assembly</th>
                    <th>Position in Assy</th>
                    <th>Program Addr</th>
                    <th>Calib. Reqd</th>
                    <th>Comments</th>
                    <th>Is Active</th>
                    <th>ComponentType_Id</th>
                    <th>ComponentStatus_Id</th>
                    <th>ComponentModel_Id</th>
                    <th>AssignedToProject_Id</th>
                    <th>AssignedToAssemblyDb_Id</th>
                </tr>
            </thead>
            <tbody class="selectable"></tbody>
        </table>
    </div>
</div>

<!------- EditFormView ------->
<div class="container-fluid hide" id="EditFormView">
    <div class="row">
        <div class="col-xs-6">
            <h3 id="EditFormLabel">Create/Edit Component</h3>
        </div>
        <div class="col-xs-6">
            <h3><button class="btn btn-default pull-right" type="button" id="EditFormBtnBack">Cancel</button></h3>
        </div>
    </div>
    <div class="well">
        <form class="form-horizontal" role="form" id="EditForm">

            <div class="row" id="CreateMultipleRow">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label col-sm-2" for="CreateMultiple">Multiple</label>
                        <div class="col-sm-10">
                            <input class="form-control input-tdo-info"
                                   data-val="true" data-val-number="The field must be a number."
                                   data-val-range="The field must be between 1 and 100." data-val-range-max="100" data-val-range-min="1"
                                   id="CreateMultiple" name="CreateMultiple" placeholder="Create Multiple" type="number" value="">
                            <span class="field-validation-valid" data-valmsg-for="CreateMultiple" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.CompName, "Name", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.CompName, new { @class = "form-control modifiable", placeholder = "Component Name" })
                            @Html.ValidationMessageFor(x => x.CompName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.CompAltName, "Alternate Name", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.CompAltName, new { @class = "form-control modifiable", placeholder = "Component Alternate Name" })
                            @Html.ValidationMessageFor(x => x.CompAltName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.CompAltName2, "AltName 2", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.CompAltName2, new { @class = "form-control modifiable", placeholder = "2nd Alternate Name" })
                            @Html.ValidationMessageFor(x => x.CompAltName2)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.ComponentType_Id, "Type", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.ComponentType_Id, new { @class = "form-control modifiable", placeholder = "Component Type" })
                            @Html.ValidationMessageFor(x => x.ComponentType_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.ComponentStatus_Id, "Status", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.ComponentStatus_Id, new { @class = "form-control modifiable", placeholder = "Component Status" })
                            @Html.ValidationMessageFor(x => x.ComponentStatus_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.ComponentModel_Id, "Model", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.ComponentModel_Id, new { @class = "form-control modifiable", placeholder = "Component Model" })
                            @Html.ValidationMessageFor(x => x.ComponentModel_Id)
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssignedToProject_Id, "Project", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssignedToProject_Id, new { @class = "form-control modifiable", placeholder = "Assigned to Project" })
                            @Html.ValidationMessageFor(x => x.AssignedToProject_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssignedToAssemblyDb_Id, "Assembly", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssignedToAssemblyDb_Id, new { @class = "form-control modifiable", placeholder = "Assigned to Assembly" })
                            @Html.ValidationMessageFor(x => x.AssignedToAssemblyDb_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.PositionInAssy, "Pos. in Assy", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.PositionInAssy, new { @class = "form-control modifiable", placeholder = "Position in Assembly" })
                            @Html.ValidationMessageFor(x => x.PositionInAssy)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.ProgramAddress, "Prog. Address", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.ProgramAddress, new { @class = "form-control modifiable", placeholder = "Program Address" })
                            @Html.ValidationMessageFor(x => x.ProgramAddress)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-sm-offset-2">
                            @Html.CheckBoxFor(x => x.CalibrationReqd, new { @class = "modifiable" }) &nbsp;&nbsp;
                            @Html.LabelFor(x => x.CalibrationReqd, "Calibration Required")
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Comments, "Comments", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextAreaFor(x => x.Comments, 3, 10, new { @class = "form-control modifiable", placeholder = "Comments" })
                            @Html.ValidationMessageFor(x => x.Comments)
                        </div>
                    </div>
                    <div class="form-group hide" id="EditFormGroupIsActive">
                        <div class="col-sm-10 col-sm-offset-2">
                            @Html.CheckBoxFor(x => x.IsActive, new { @class = "modifiable" }) &nbsp;&nbsp;
                            @Html.LabelFor(x => x.IsActive, "Is Active") &nbsp;&nbsp; <em>(Marking as 'Active' un-deletes record.)</em>
                        </div>
                    </div>
                </div>

            </div>

            <div class="form-group">
                <div class="col-xs-6">
                    <button class="btn btn-default" type="button" id="EditFormBtnCancel">Cancel</button>
                </div>
                <div class="col-xs-6">
                    <button class="btn btn-success pull-right" type="button" id="EditFormBtnOk">
                        &nbsp;&nbsp;&nbsp;&nbsp;<span class="glyphicon glyphicon-ok"></span>&nbsp;&nbsp;&nbsp;&nbsp;
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/DataTables")
    @Scripts.Render("~/bundles/jquery-ui")
    @Scripts.Render("~/bundles/bootstrap-toggle")
    @Scripts.Render("~/bundles/magicsuggest")
    <script src="~/Scripts/SDDB/Component.js"></script>
}

@section CSS {
    @Styles.Render("~/bundles/DataTables-CSS")
    @Styles.Render("~/bundles/jquery-ui-CSS")
    @Styles.Render("~/bundles/bootstrap-toggle-CSS")
    @Styles.Render("~/bundles/magicsuggest-css")
}








