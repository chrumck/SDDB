@model SDDB.Domain.Entities.AssemblyLogEntry
@using SDDB.WebUI.Infrastructure
@{
    ViewBag.Title = "Assembly Log Entries";
}
<!------- InitialView ------->
<div class="container-fluid" id="InitialView">
    <h4>Please wait, page loading...</h4>
</div>

<!----- Navbar Section ----->
@section Navbar{
    <div class="btn-group navbar-btn tdo-btngroup-main">
        <button type="button" class="btn btn-default" id="BtnCreate">New</button>
        <button type="button" class="btn btn-tdo-nav" id="BtnEdit">&nbsp;&nbsp;Edit&nbsp;&nbsp;</button>
        <button type="button" class="btn btn-danger" id="BtnDelete">&nbsp;&nbsp;Del&nbsp;&nbsp;</button>
    </div>

    <div class="btn-group navbar-btn tdo-btngroup-edit hidden">
        <button type="button" class="btn btn-default" id="EditFormBtnCancel">Cancel</button>
        <button type="button" class="btn btn-tdo-nav disabled">&nbsp;&nbsp;&nbsp;&nbsp;</button>
        <button type="button" class="btn btn-success" id="EditFormBtnOk">
            &nbsp;&nbsp;&nbsp;&nbsp;<span class="glyphicon glyphicon-ok"></span>&nbsp;&nbsp;&nbsp;&nbsp;
        </button>
    </div>
}
@section NavbarCollapse{
    <ul class="nav navbar-nav tdo-btngroup-main">
        <li class="dropdown margin-left-5px">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#">More<span class="caret"></span></a>
            <ul class="dropdown-menu">
                <li><a class="collapsenav" href=# id="dropdownId1">Show 1st Columns</a></li>
                <li><a class="collapsenav" href=# id="dropdownId2">Show 2nd Columns</a></li>
                <li><a class="collapsenav" href=# id="dropdownId3">Show 3rd Columns</a></li>
            </ul>
        </li>
    </ul>
}

<!------- MainView ------->
<div class="container-fluid hidden" id="MainView">

    <div class="row">
        <div class="col-md-12 col-lg-6">
            <div class="btn-group margin-bottom-2px">
                <input class="form-control input-tdo-warning" data-val="true" data-val-dbisdateiso="The field must have YYYY-MM-DD format."
                       id="FilterDateStart" placeholder="Start Date" type="text" value="">
            </div>
            <div class="btn-group margin-bottom-2px">
                <input class="form-control input-tdo-warning" data-val="true" data-val-dbisdateiso="The field must have YYYY-MM-DD format."
                       id="FilterDateEnd" placeholder="End Date" type="text" value="">
            </div>
        </div>
        <div class="col-md-12 col-lg-6">
            <div class="btn-group margin-bottom-2px">
                <div id="MsFilterByProject" placeholder="Select Project"></div>
            </div>
            <div class="btn-group margin-bottom-2px">
                <div id="MsFilterByAssembly" placeholder="Select Assembly"></div>
            </div>
            <div class="btn-group margin-bottom-2px">
                <div id="MsFilterByPerson" placeholder="Select Person"></div>
            </div>
        </div>
    </div>

    <div class="panel panel-primary" id="PanelTableMain">
        <div class="panel-heading text-center" style="font-size:130%">
            <strong>Assys. Log</strong>
            <div class="pull-left">
                <button type="button" class="btn btn-xs btn-info" id="BtnTableMainExport">
                    <span class="glyphicon glyphicon-download-alt"></span>
                </button>
            </div>
            <div class="pull-right">
                <input id="ChBoxShowDeleted" type="checkbox" data-toggle="toggle" data-size="mini" data-width="65"
                        data-onstyle="warning" data-offstyle="primary" data-on="Deleted" data-off="Active">
            </div>
        </div>
        <table class="table table-striped" id="TableMain">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Date</th>
                    <th>Assembly</th>
                    <th>Changed By</th>
                    <th>Status</th>
                    <th>Project</th>
                    <th>Location</th>
                    <th>GlobalX</th>
                    <th>GlobalY</th>
                    <th>GlobalZ</th>
                    <th>LocalXDesign</th>
                    <th>LocalYDesign</th>
                    <th>LocalZDesign</th>
                    <th>LocalXAsBuilt</th>
                    <th>LocalYAsBuilt</th>
                    <th>LocalZAsBuilt</th>
                    <th>Stationing</th>
                    <th>Length</th>
                    <th>Comments</th>
                    <th>Is Active</th>
                    <th>AssemblyDb_Id</th>
                    <th>LastSavedByPerson_Id</th>
                    <th>AssemblyStatus_Id</th>
                    <th>AssignedToProject_Id</th>
                    <th>AssignedToLocation_Id</th>
                </tr>
            </thead>
            <tbody class="selectable"></tbody>
        </table>
    </div>
</div>

<!------- EditFormView ------->
<div class="container-fluid hidden" id="EditFormView">
    <div class="row">
        <div class="col-xs-12">
            <h3 id="EditFormLabel">Create/Edit Log Entry</h3>
        </div>
    </div>
    <div class="well well-tdo">
        <form class="form-horizontal" role="form" id="EditForm">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.LogEntryDateTime, "DateTime", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            <input class="form-control modifiable" data-val="true" data-val-dbisdatetimeiso="The field has to be in 'yyyy-MM-dd HH:mm' format."
                                   data-val-required="Entry Date field is required" id="LogEntryDateTime" name="LogEntryDateTime" placeholder="Log Entry Date &amp; Time" value="" type="text">
                            @Html.ValidationMessageFor(x => x.LogEntryDateTime)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssemblyDb_Id, "Assembly", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssemblyDb_Id, new { @class = "form-control modifiable", placeholder = "Assembly" })
                            @Html.ValidationMessageFor(x => x.AssemblyDb_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssemblyStatus_Id, "Status", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssemblyStatus_Id, new { @class = "form-control modifiable", placeholder = "Assembly Status" })
                            @Html.ValidationMessageFor(x => x.AssemblyStatus_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssignedToProject_Id, "Project", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssignedToProject_Id, new { @class = "form-control modifiable", placeholder = "Assigned to Project" })
                            @Html.ValidationMessageFor(x => x.AssignedToProject_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssignedToLocation_Id, "Location", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssignedToLocation_Id, new { @class = "form-control modifiable", placeholder = "Assigned to Location" })
                            @Html.ValidationMessageFor(x => x.AssignedToLocation_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyGlobalX, "Global X", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyGlobalX, new { @class = "form-control modifiable", placeholder = "Assy. Global X" })
                            @Html.ValidationMessageFor(x => x.AssyGlobalX)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyGlobalY, "Global Y", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyGlobalY, new { @class = "form-control modifiable", placeholder = "Assy. Global Y" })
                            @Html.ValidationMessageFor(x => x.AssyGlobalY)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyGlobalZ, "Global Z", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyGlobalZ, new { @class = "form-control modifiable", placeholder = "Assy. Global Z" })
                            @Html.ValidationMessageFor(x => x.AssyGlobalZ)
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyLocalXDesign, "LocalX Design", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyLocalXDesign, new { @class = "form-control modifiable", placeholder = "Local Design X" })
                            @Html.ValidationMessageFor(x => x.AssyLocalXDesign)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyLocalYDesign, "LocalY Design", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyLocalYDesign, new { @class = "form-control modifiable", placeholder = "Local Design Y" })
                            @Html.ValidationMessageFor(x => x.AssyLocalYDesign)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyLocalZDesign, "LocalZ Design", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyLocalZDesign, new { @class = "form-control modifiable", placeholder = "Local Design Z" })
                            @Html.ValidationMessageFor(x => x.AssyLocalZDesign)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyLocalXAsBuilt, "LocalX AsBuilt", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyLocalXAsBuilt, new { @class = "form-control modifiable", placeholder = "Local AsBuilt X" })
                            @Html.ValidationMessageFor(x => x.AssyLocalXAsBuilt)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyLocalYAsBuilt, "LocalY AsBuilt", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyLocalYAsBuilt, new { @class = "form-control modifiable", placeholder = "Local AsBuilt Y" })
                            @Html.ValidationMessageFor(x => x.AssyLocalYAsBuilt)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyLocalZAsBuilt, "LocalZ AsBuilt", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyLocalZAsBuilt, new { @class = "form-control modifiable", placeholder = "Local AsBuilt Z" })
                            @Html.ValidationMessageFor(x => x.AssyLocalZAsBuilt)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyStationing, "Stationing", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyStationing, new { @class = "form-control modifiable", placeholder = "Assy. Stationing" })
                            @Html.ValidationMessageFor(x => x.AssyStationing)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssyLength, "Length", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssyLength, new { @class = "form-control modifiable", placeholder = "Assy. Length" })
                            @Html.ValidationMessageFor(x => x.AssyLength)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Comments, "Comments", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextAreaFor(x => x.Comments, 3, 10, new { @class = "form-control modifiable", placeholder = "Comments" })
                            @Html.ValidationMessageFor(x => x.Comments)
                        </div>
                    </div>
                    <div class="form-group hidden" id="EditFormGroupIsActive">
                        <div class="col-sm-10 col-sm-offset-2">
                            @Html.CheckBoxFor(x => x.IsActive_bl, new { @class = "modifiable" }) &nbsp;&nbsp;
                            @Html.LabelFor(x => x.IsActive_bl, "Is Active") &nbsp;&nbsp; <em>(Marking as 'Active' un-deletes record.)</em>
                        </div>
                    </div>
                </div>

            </div>
           
        </form>
    </div>
</div>

<!------- ScriptVariables ------->
<script>var AssemblyId = "@ViewBag.AssemblyId";</script>

@section Scripts {
    @Scripts.Render("~/bundles/DataTables")
    @Scripts.Render("~/bundles/bootstrap-toggle")
    @Scripts.Render("~/bundles/magicsuggest")
    @Scripts.Render("~/bundles/bootstrap-datetimepicker")
    <script src="~/Scripts/SDDB/AssemblyLogEntry.js?v=@Html.GetAppVersion()"></script>
}

@section CSS {
    @Styles.Render("~/bundles/DataTables-CSS")
    @Styles.Render("~/bundles/bootstrap-toggle-CSS")
    @Styles.Render("~/bundles/magicsuggest-css")
    @Styles.Render("~/bundles/bootstrap-datetimepicker-CSS")
}
