@model SDDB.Domain.Entities.ProjectEvent
@using SDDB.WebUI.Infrastructure
@{
    ViewBag.Title = "SDDB Project Events";
}
<!------- InitialView ------->
<div class="container-fluid" id="InitialView">
    <h4>Please wait, page loading...</h4>
</div>

<!----- Navbar Section ----->
@section Navbar{
    <div class="btn-group navbar-btn tdo-btngroup-main">
        <button type="button" class="btn btn-default" id="BtnCreate">New</button>
        <button type="button" class="btn btn-tdo-nav" id="BtnEdit">&nbsp;&nbsp;Edit&nbsp;&nbsp;</button>
        <button type="button" class="btn btn-danger" id="BtnDelete">&nbsp;&nbsp;Del&nbsp;&nbsp;</button>
    </div>

    <div class="btn-group navbar-btn tdo-btngroup-edit hidden">
        <button type="button" class="btn btn-default" id="EditFormBtnCancel">Cancel</button>
        <button type="button" class="btn btn-tdo-nav disabled">&nbsp;&nbsp;&nbsp;&nbsp;</button>
        <button type="button" class="btn btn-success" id="EditFormBtnOk">
            &nbsp;&nbsp;&nbsp;&nbsp;<span class="glyphicon glyphicon-ok"></span>&nbsp;&nbsp;&nbsp;&nbsp;
        </button>
    </div>
}

<!------- MainView ------->
<div class="container-fluid hidden" id="MainView">

    <div class="row">
        <div class="col-xs-12">
            <div class="btn-group margin-bottom-2px">
                <div id="MsFilterByProject" placeholder="Select Project"></div>
            </div>
        </div>
    </div>

    <div class="panel panel-primary" id="PanelTableMain">
        <div class="panel-heading text-center" style="font-size:130%">
            <strong>Project Events</strong>
            <div class="pull-left">
                <button type="button" class="btn btn-xs btn-info" id="BtnTableMainExport">
                    <span class="glyphicon glyphicon-download-alt"></span>
                </button>
            </div>
            <div class="pull-right">
                <input id="ChBoxShowDeleted" type="checkbox" data-toggle="toggle" data-size="mini" data-width="65"
                        data-onstyle="warning" data-offstyle="primary" data-on="Deleted" data-off="Active">
            </div>
        </div>
        <table class="table table-striped" id="TableMain">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Event Name</th>
                    <th>Alternate Name</th>
                    <th>Project</th>
                    <th>Created</th>
                    <th>Created By</th>
                    <th>Closed</th>
                    <th>Closed By</th>
                    <th>Comments</th>
                    <th>Is Active</th>
                    <th>AssignedToProject_Id</th>
                </tr>
            </thead>
            <tbody class="selectable"></tbody>
        </table>
    </div>
</div>

<!------- EditFormView ------->
<div class="container-fluid hidden" id="EditFormView">
    <div class="row">
        <div class="col-xs-12">
            <h3 id="EditFormLabel">Create/Edit Project Event</h3>
        </div>
    </div>
    <div class="well well-tdo">
        <form class="form-horizontal" role="form" id="EditForm">
            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.EventName, "Name", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.EventName, new { @class = "form-control modifiable", placeholder = "Event Name" })
                            @Html.ValidationMessageFor(x => x.EventName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.EventAltName, "Alternate Name", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.EventAltName, new { @class = "form-control modifiable", placeholder = "Alternate Name" })
                            @Html.ValidationMessageFor(x => x.EventAltName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssignedToProject_Id, "Project", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssignedToProject_Id, new { @class = "form-control modifiable", placeholder = "Assigned To Project" })
                            @Html.ValidationMessageFor(x => x.AssignedToProject_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.EventCreated, "Event Created", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            <input class="form-control modifiable" data-val="true" data-val-dbisdatetimeiso="The field has to be in 'yyyy-MM-dd HH:mm' format."
                                   data-val-required="Event Create Date is required" id="EventCreated" name="EventCreated" placeholder="Date Created" value="" type="text">
                            @Html.ValidationMessageFor(x => x.EventCreated)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.CreatedByPerson_Id, "Created By", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.CreatedByPerson_Id, new { @class = "form-control modifiable", placeholder = "Created By" })
                            @Html.ValidationMessageFor(x => x.CreatedByPerson_Id)
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.EventClosed, "Event Closed", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            <input class="form-control modifiable" data-val="true" data-val-dbisdatetimeiso="The field has to be in 'yyyy-MM-dd HH:mm' format."
                                   id="EventClosed" name="EventClosed" placeholder="Date Closed" value="" type="text">
                            @Html.ValidationMessageFor(x => x.EventClosed)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.ClosedByPerson_Id, "Closed By", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.ClosedByPerson_Id, new { @class = "form-control modifiable", placeholder = "Closed By" })
                            @Html.ValidationMessageFor(x => x.ClosedByPerson_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Comments, "Comments", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextAreaFor(x => x.Comments, 3, 10, new { @class = "form-control modifiable", placeholder = "Comments" })
                            @Html.ValidationMessageFor(x => x.Comments)
                        </div>
                    </div>
                    <div class="form-group hidden" id="EditFormGroupIsActive">
                        <div class="col-sm-10 col-sm-offset-2">
                            @Html.CheckBoxFor(x => x.IsActive_bl, new { @class = "modifiable" }) &nbsp;&nbsp;
                            @Html.LabelFor(x => x.IsActive_bl, "Is Active") &nbsp;&nbsp; <em>(Marking as 'Active' un-deletes record.)</em>
                        </div>
                    </div>
                </div>

            </div>
        </form>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/DataTables")
    @Scripts.Render("~/bundles/bootstrap-toggle")
    @Scripts.Render("~/bundles/magicsuggest")
    @Scripts.Render("~/bundles/bootstrap-datetimepicker")
    <script src="~/Scripts/SDDB/ProjectEvent.js?v=@Html.GetAppVersion()"></script>
}

@section CSS {
    @Styles.Render("~/bundles/DataTables-CSS")
    @Styles.Render("~/bundles/bootstrap-toggle-CSS")
    @Styles.Render("~/bundles/magicsuggest-css")
    @Styles.Render("~/bundles/bootstrap-datetimepicker-CSS")
}

