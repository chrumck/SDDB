@model SDDB.Domain.Entities.Document
@using SDDB.WebUI.Infrastructure
@{
    ViewBag.Title = "SDDB Documents";
}
<!------- initialView ------->
<div class="container-fluid" id="initialView">
    <h4>Please wait, page loading...</h4>
</div>

<!----- Navbar Section ----->
@section Navbar{
    @Html.Partial("_StandardEditButtons")
}
@section NavbarCollapse{
    <ul class="nav navbar-nav tdo-btngroup-initial"></ul>
    
    <ul class="nav navbar-nav tdo-btngroup-main hidden">
        <li class="margin-left-10px">
            <div class="btn-group navbar-btn">
                <button type="button" class="btn btn-tdo-warning2 collapsenav" id="btnCopy"> Copy </button>
            </div>
        </li>
        <li class="dropdown margin-left-5px">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#">More<span class="caret"></span></a>
            <ul class="dropdown-menu">
                <li><a class="collapsenav" href=# id="columnsSelectId1">Show 1st Columns</a></li>
                <li><a class="collapsenav" href=# id="columnsSelectId2">Show 2nd Columns</a></li>
            </ul>
        </li>
    </ul>
}

<!------- mainView ------->
<div class="container-fluid hidden" id="mainView">

    <div class="row">
        <div class="col-xs-12">
            <div class="btn-group margin-bottom-2px">
                <div id="msFilterByType" placeholder="Select Type"></div>
            </div>
            <div class="btn-group margin-bottom-2px">
                <div id="msFilterByProject" placeholder="Select Project"></div>
            </div>            
        </div>
    </div>

    <div class="panel panel-primary" id="panelTableMain">
        <div class="panel-heading text-center" style="font-size:130%">
            <strong>Documents</strong>
            <div class="pull-left">
                <button type="button" class="btn btn-xs btn-info" id="btnTableMainExport">
                    <span class="glyphicon glyphicon-download-alt"></span>
                </button>
            </div>
            <div class="pull-right">
                <input id="chBoxShowDeleted" type="checkbox" data-toggle="toggle" data-size="mini" data-width="65"
                        data-onstyle="warning" data-offstyle="primary" data-on="Deleted" data-off="Active">
            </div>
        </div>
        <table class="table table-striped" id="tableMain">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Document Name</th> 
                    <th>Alternate Name</th>
                    <th>Document Type</th>
                    <th>Doc. Last Version</th>
                    <th>Author</th>
                    <th>Reviewer</th>
                    <th>Project</th>
                    <th>Assy. Type</th>
                    <th>Component Type</th>
                    <th>Doc. File Path</th>
                    <th>Comments</th>
                    <th>Is Active</th>
                    <th>DocumentType_Id</th>
                    <th>AuthorPerson_Id</th>
                    <th>ReviewerPerson_Id</th>
                    <th>AssignedToProject_Id</th>
                    <th>RelatesToAssyType_Id</th>
                    <th>RelatesToCompType_Id</th>
                </tr>
            </thead>
            <tbody class="selectable"></tbody>
        </table>
    </div>
</div>

<!------- editFormView ------->
<div class="container-fluid hidden" id="editFormView">
    <div class="row">
        <div class="col-xs-12">
            <h3 id="editFormLabel">Create/Edit Document</h3>
        </div>
    </div>
    <div class="well well-tdo">
        <form class="form-horizontal" role="form" id="editForm">
            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.DocName, "Name", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.DocName, new { @class = "form-control modifiable", placeholder = "Document Name" })
                            @Html.ValidationMessageFor(x => x.DocName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.DocAltName, "Alternate Name", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.DocAltName, new { @class = "form-control modifiable", placeholder = "Document Alternate Name" })
                            @Html.ValidationMessageFor(x => x.DocAltName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.DocumentType_Id, "Type", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.DocumentType_Id, new { @class = "form-control modifiable", placeholder = "Document Type" })
                            @Html.ValidationMessageFor(x => x.DocumentType_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.DocLastVersion, "Last Version", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.DocLastVersion, new { @class = "form-control modifiable", placeholder = "Doc. Last Version" })
                            @Html.ValidationMessageFor(x => x.DocLastVersion)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.AuthorPerson_Id, "Author", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AuthorPerson_Id, new { @class = "form-control modifiable", placeholder = "Document Author" })
                            @Html.ValidationMessageFor(x => x.AuthorPerson_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.ReviewerPerson_Id, "Reviewer", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.ReviewerPerson_Id, new { @class = "form-control modifiable", placeholder = "Document Reviewer" })
                            @Html.ValidationMessageFor(x => x.ReviewerPerson_Id)
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.AssignedToProject_Id, "Project", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.AssignedToProject_Id, new { @class = "form-control modifiable", placeholder = "Assigned to Project" })
                            @Html.ValidationMessageFor(x => x.AssignedToProject_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.RelatesToAssyType_Id, "Assembly Type", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.RelatesToAssyType_Id, new { @class = "form-control modifiable", placeholder = "Relates to Assy. Type" })
                            @Html.ValidationMessageFor(x => x.RelatesToAssyType_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.RelatesToCompType_Id, "Comp. Type", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.RelatesToCompType_Id, new { @class = "form-control modifiable", placeholder = "Relates to Comp. Type" })
                            @Html.ValidationMessageFor(x => x.RelatesToCompType_Id)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.DocFilePath, "File Path", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(x => x.DocFilePath, new { @class = "form-control modifiable", placeholder = "Doc. File Path" })
                            @Html.ValidationMessageFor(x => x.DocFilePath)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Comments, "Comments", new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextAreaFor(x => x.Comments, 3, 10, new { @class = "form-control modifiable", placeholder = "Comments" })
                            @Html.ValidationMessageFor(x => x.Comments)
                        </div>
                    </div>
                    <div class="form-group hidden" id="editFormGroupIsActive">
                        <div class="col-sm-10 col-sm-offset-2">
                            @Html.CheckBoxFor(x => x.IsActive_bl, new { @class = "modifiable" }) &nbsp;&nbsp;
                            @Html.LabelFor(x => x.IsActive_bl, "Is Active") &nbsp;&nbsp; <em>(Marking as 'Active' un-deletes record.)</em>
                        </div>
                    </div>
                </div>

            </div>
        </form>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/DataTables")
    @Scripts.Render("~/bundles/bootstrap-toggle")
    @Scripts.Render("~/bundles/magicsuggest")
    @Scripts.Render("~/bundles/sddb/shared_views")
    <script src="~/Scripts/SDDB/Document.js?v=@Html.GetAppVersion()"></script>
}

@section CSS {
    @Styles.Render("~/bundles/DataTables-CSS")
    @Styles.Render("~/bundles/bootstrap-toggle-CSS")
    @Styles.Render("~/bundles/magicsuggest-css")
}

